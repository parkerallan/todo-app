{"ast":null,"code":"var _jsxFileName = \"/Users/parkerallan/Documents/todo-app/todo/src/components/Todoitem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Todoitem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        // background: '#f4f4f4',\n        // padding: '10px',\n        // borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card m-2\",\n      style: this.getStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-body pt-5 pb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"card-text \",\n          type: \"checkbox\",\n          onChange: this.props.markComplete.bind(this, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), \" \", '', title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.delTodo.bind(this, id),\n          type: \"button\",\n          className: \"btn btn-danger float-end\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTodoitem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nexport default Todoitem;","map":{"version":3,"sources":["/Users/parkerallan/Documents/todo-app/todo/src/components/Todoitem.js"],"names":["React","Component","PropTypes","Todoitem","getStyle","textDecoration","props","todo","completed","render","id","title","markComplete","bind","delTodo","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,QADsC,GAC3B,MAAM;AACf,aAAO;AACL;AACA;AACA;AACAC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA2B,cAA3B,GAA4C;AAJvD,OAAP;AAMD,KARqC;AAAA;;AAUtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgB,KAAKL,KAAL,CAAWC,IAAjC;AACA,wBACE;AAAK,MAAA,SAAS,EAAE,UAAhB;AAA2B,MAAA,KAAK,EAAI,KAAKH,QAAL,EAApC;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,gCACA;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,UAAnC;AAA8C,UAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADA,OACoG,EADpG,EAEEC,KAFF,eAGA;AAAQ,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWQ,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BH,EAA9B,CAAjB;AAAoD,UAAA,IAAI,EAAC,QAAzD;AAAkE,UAAA,SAAS,EAAC,0BAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArBqC;AAwBxCP,QAAQ,CAACY,SAAT,GAAqB;AACnBR,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBC;AADJ,CAArB;AAIA,eAAed,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Todoitem extends Component {\n  getStyle = () => {\n    return {\n      // background: '#f4f4f4',\n      // padding: '10px',\n      // borderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed? 'line-through' : 'none'\n    }\n  }\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div className= \"card m-2\" style = {this.getStyle()}>\n        <p className=\"card-body pt-5 pb-1\">\n        <input className=\"card-text \" type='checkbox' onChange={this.props.markComplete.bind(this, id)} /> {''}\n        { title }\n        <button onClick={this.props.delTodo.bind(this, id)} type=\"button\" className=\"btn btn-danger float-end\">X</button>\n        </p>\n      </div>\n    )\n  }\n}\n\nTodoitem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\n\nexport default Todoitem\n"]},"metadata":{},"sourceType":"module"}